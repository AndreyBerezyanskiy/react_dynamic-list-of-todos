{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelectTodo","selectedTodo","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","sortType","onSortTodos","onQuery","query","onClear","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onHideTodo","useState","user","setUser","fetchedUser","a","userId","data","console","log","useEffect","href","email","name","App","setTodos","setSelectedTodo","setSortType","setQuery","fetchedTodos","visibleTodo","preparedTodos","todosForRender","lowQuery","toLowerCase","filter","includes","prepareTodo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37433cbe.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  onSelectTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className={cn({ 'fas fa-check': todo.completed })} />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded \">\n              <p className={cn(\n                {\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSelectTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={cn({\n                    'far fa-eye': todo.id !== selectedTodo?.id,\n                    'far fa-eye-slash': todo.id === selectedTodo?.id,\n                  })}\n                  />\n                  {' '}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n        {/* <tr data-cy=\"todo\" className=\"has-background-info-light\"> */}\n        {/*  <td className=\"is-vcentered\">2</td> */}\n        {/*  <td className=\"is-vcentered\" /> */}\n        {/*  <td className=\"is-vcentered is-expanded\"> */}\n        {/*    <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p> */}\n        {/*  </td> */}\n        {/*  <td className=\"has-text-right is-vcentered\"> */}\n        {/*    <button data-cy=\"selectButton\" className=\"button\" type=\"button\"> */}\n        {/*      <span className=\"icon\"> */}\n        {/*        <i className=\"far fa-eye-slash\" /> */}\n        {/*      </span> */}\n        {/*    </button> */}\n        {/*  </td> */}\n        {/* </tr> */}\n\n        {/* <tr data-cy=\"todo\" className=\"\"> */}\n        {/*  <td className=\"is-vcentered\">1</td> */}\n        {/*  <td className=\"is-vcentered\" /> */}\n        {/*  <td className=\"is-vcentered is-expanded\"> */}\n        {/*    <p className=\"has-text-danger\">delectus aut autem</p> */}\n        {/*  </td> */}\n        {/*  <td className=\"has-text-right is-vcentered\"> */}\n        {/*    <button data-cy=\"selectButton\" className=\"button\" type=\"button\"> */}\n        {/*      <span className=\"icon\"> */}\n        {/*        <i className=\"far fa-eye\" /> */}\n        {/*      </span> */}\n        {/*    </button> */}\n        {/*  </td> */}\n        {/* </tr> */}\n\n        {/* <tr data-cy=\"todo\" className=\"\"> */}\n        {/*  <td className=\"is-vcentered\">6</td> */}\n        {/*  <td className=\"is-vcentered\" /> */}\n        {/*  <td className=\"is-vcentered is-expanded\"> */}\n        {/*    <p className=\"has-text-danger\"> */}\n        {/*      qui ullam ratione quibusdam voluptatem quia omnis */}\n        {/*    </p> */}\n        {/*  </td> */}\n        {/*  <td className=\"has-text-right is-vcentered\"> */}\n        {/*    <button data-cy=\"selectButton\" className=\"button\" type=\"button\"> */}\n        {/*      <span className=\"icon\"> */}\n        {/*        <i className=\"far fa-eye\" /> */}\n        {/*      </span> */}\n        {/*    </button> */}\n        {/*  </td> */}\n        {/* </tr> */}\n\n        {/* <tr data-cy=\"todo\" className=\"\"> */}\n        {/*  <td className=\"is-vcentered\">8</td> */}\n        {/*  <td className=\"is-vcentered\"> */}\n        {/*    <span className=\"icon\" data-cy=\"iconCompleted\"> */}\n        {/*      <i className=\"fas fa-check\" /> */}\n        {/*    </span> */}\n        {/*  </td> */}\n        {/*  <td className=\"is-vcentered is-expanded\"> */}\n        {/*    <p className=\"has-text-success\">quo adipisci enim quam ut ab</p> */}\n        {/*  </td> */}\n        {/*  <td className=\"has-text-right is-vcentered\"> */}\n        {/*    <button data-cy=\"selectButton\" className=\"button\" type=\"button\"> */}\n        {/*      <span className=\"icon\"> */}\n        {/*        <i className=\"far fa-eye\" /> */}\n        {/*      </span> */}\n        {/*    </button> */}\n        {/*  </td> */}\n        {/* </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  sortType: string;\n  onSortTodos: (event: string) => void;\n  onQuery: (event: string) => void;\n  query: string;\n  onClear: () => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  sortType,\n  onSortTodos,\n  onQuery,\n  query,\n  onClear,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={sortType}\n          onChange={(event) => onSortTodos(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={onClear}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ninterface Props {\n  onHideTodo: () => void;\n  todo: Todo;\n}\n\nexport const TodoModal: React.FC<Props> = ({ onHideTodo, todo }) => {\n  const { id, title, completed } = todo;\n\n  const [user, setUser] = useState<User | null>(null);\n  const fetchedUser = async () => {\n    try {\n      if (todo.userId) {\n        const data = await getUser(todo.userId);\n\n        setUser(data);\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchedUser();\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onHideTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n\n              {completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user && (user.name)}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [sortType, setSortType] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const fetchedTodos = async () => {\n    try {\n      const data = await getTodos();\n\n      setTodos(data);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchedTodos();\n  }, []);\n\n  const handleSelectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleHideTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleSetSortType = (event: string) => {\n    setSortType(event);\n  };\n\n  const handleSetQuery = (event: string) => {\n    setQuery(event);\n  };\n\n  const handleClearQuery = () => {\n    setQuery('');\n  };\n\n  const prepareTodo = (preparedTodos: Todo[]):Todo[] => {\n    let todosForRender = preparedTodos;\n\n    if (query) {\n      const lowQuery = query.toLowerCase();\n\n      todosForRender = todosForRender.filter(\n        todo => todo.title.toLowerCase().includes(lowQuery),\n      );\n    }\n\n    if (sortType !== 'all') {\n      todosForRender = todosForRender.filter(todo => {\n        switch (sortType) {\n          case 'active':\n            return !todo.completed;\n          case 'completed':\n            return todo.completed;\n          default:\n            return todo;\n        }\n      });\n    }\n\n    return todosForRender;\n  };\n\n  const visibleTodo = prepareTodo(todos);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                sortType={sortType}\n                onSortTodos={handleSetSortType}\n                onQuery={handleSetQuery}\n                query={query}\n                onClear={handleClearQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? (\n                  <Loader />\n                )\n                : (\n                  <TodoList\n                    todos={visibleTodo}\n                    onSelectTodo={handleSelectTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal onHideTodo={handleHideTodo} todo={selectedTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}